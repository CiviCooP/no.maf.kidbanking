<?php

class CRM_Banking_PluginImpl_Matcher_StopAvtale extends CRM_Banking_PluginImpl_Matcher_KID {

  /**
   * class constructor
   */
  function __construct($config_name) {
    parent::__construct($config_name);

    // read config, set defaults
    $config = $this->_plugin_config;
    if (!isset($config->threshold)) {
      $config->threshold = 0.00;
    }
    if (!isset($config->campaign_penalty)) {
      $config->campaign_penalty = 0.15;
    }
  }

  public function match(CRM_Banking_BAO_BankTransaction $btx, CRM_Banking_Matcher_Context $context) {
    $threshold = $this->getThreshold();
    $data = $btx->getDataParsed();
    if (empty($data['kid']) || empty($data['recordName']) || $data['recordName'] != 'StandingOrder' || !isset($data['registrationType'])) {
      return NULL;
    }

    $kid = $data['kid'];
    $registrationType = $data['registrationType'];
    try {
      $kidData = civicrm_api3('kid', 'parse', array('kid' => $kid));
      $contact_id = $kidData['contact_id'];
      $campaign_id = $kidData['campaign_id'];
      $contribution_id = $kidData['contribution_id'];
      $contact = civicrm_api3('Contact', 'getsingle', array(
        'is_deleted' => 0,
        'id' => $contact_id
      ));
    } catch (Exception $e) {
      return NULL;
    }
    if ($registrationType !== 2) {
      return NULL;
    }

    $mandates = civicrm_api3('SepaMandate', 'get', array(
      'contact_id' => $contact_id,
      'type' => 'RCUR',
      'options' => array(
        'limit' => 0,
      ),
    ));

    $status_to_skip = array('COMPLETE', 'ONHOLD', 'PARTIAL', 'INVALID');
    foreach($mandates['values'] as $mandate) {
      if (in_array($mandate['status'], $status_to_skip)) {
        continue;
      }
      if ($mandate['entity_table'] != 'civicrm_contribution_recur') {
        continue;
      }

      $contribution_recur = civicrm_api3('ContributionRecur', 'getsingle', array('id' => $mandate['entity_id']));

      $probability = 1.00;
      $suggestion = new CRM_Banking_Matcher_Suggestion($this, $btx);
      $suggestion->setTitle(ts("End Avtale"));
      $suggestion->setId('stopavtale-kid-'.$kid);
      $suggestion->setParameter('kid', $kid);
      $suggestion->setParameter('contact_id', $contact_id);
      $suggestion->setParameter('mandate_id', $mandate['id']);
      $suggestion->setParameter('contribution_recur_id', $contribution_recur['id']);
      if ($contribution_recur['campaign_id'] != $campaign_id) {
        $suggestion->addEvidence($this->_plugin_config->campaign_penalty, ts("The campaign of the transaction differs from the campaign of the avtale"));
        $probability = $probability - $this->_plugin_config->campaign_penalty;
      }
      $suggestion->setProbability($probability);

      if ($suggestion->getProbability() >= $threshold) {
        $btx->addSuggestion($suggestion);
        $this->addSuggestion($suggestion);
      }
    }

    // that's it...
    return empty($this->_suggestions) ? null : $this->_suggestions;
  }

  public function execute($match, $btx) {
    $cancel_reason = ts('Cancelled by donor through his/her bank');
    $mandate_id = $match->getParameter('mandate_id');
    CRM_Sepa_BAO_SEPAMandate::terminateMandate($mandate_id, date("Y-m-d"), $cancel_reason);
    // save the account
    $this->storeAccountWithContact($btx, $match->getParameter('contact_id'));

    $newStatus = banking_helper_optionvalueid_by_groupname_and_name('civicrm_banking.bank_tx_status', 'Processed');
    $btx->setStatus($newStatus);
    parent::execute($match, $btx);
    return true;
  }

  /**
   * Generate html code to visualize the given match. The visualization may also provide interactive form elements.
   *
   * @val $match    match data as previously generated by this plugin instance
   * @val $btx      the bank transaction the match refers to
   * @return html code snippet
   */
  function visualize_match( CRM_Banking_Matcher_Suggestion $suggestion, $btx) {
    $smarty_vars = array();

    $contact_id = $suggestion->getParameter('contact_id');
    $mandate_id = $suggestion->getParameter('mandate_id');
    $contribution_recur_id = $suggestion->getParameter('contribution_recur_id');

    $contact = civicrm_api3('Contact', 'getsingle', array('id' => $contact_id));
    $contribution_recur = civicrm_api3('ContributionRecur', 'getsingle', array('id' => $contribution_recur_id));
    $mandate = civicrm_api3('SepaMandate', 'getsingle', array('id' => $mandate_id));

    // assign to smarty and compile HTML
    $smarty_vars['contact'] = $contact;
    $smarty_vars['contribution_recur'] = $contribution_recur;
    $smarty_vars['mandate'] = $mandate;

    if ($contribution_recur['campaign_id']) {
      $smarty_vars['campaign'] = civicrm_api3('Campaign', 'getvalue', array('return' => 'title', 'id' => $contribution_recur['campaign_id']));
    }
    $smarty_vars['penalties'] = $suggestion->getEvidence();

    $smarty = CRM_Banking_Helpers_Smarty::singleton();
    $smarty->pushScope($smarty_vars);
    $html_snippet = $smarty->fetch('CRM/Banking/PluginImpl/Matcher/StopAvtale.suggestion.tpl');
    $smarty->popScope();
    return $html_snippet;
  }

  /**
   * Generate html code to visualize the executed match.
   *
   * @val $match    match data as previously generated by this plugin instance
   * @val $btx      the bank transaction the match refers to
   * @return html code snippet
   */
  function visualize_execution_info( CRM_Banking_Matcher_Suggestion $match, $btx) {
    $mandate_id = $match->getParameter('mandate_id');
    $contribution_recur_id = 0;
    try {
      $mandate = civicrm_api3('SepaMandate', 'getsingle', array('id' => $mandate_id));
      if ($mandate['entity_table'] == 'civicrm_contribution_recur') {
        $contribution_recur_id = $mandate['entity_id'];
      }
    } catch (Exception $e) {
      // Do nothing.
    }
    $contact_id = $match->getParameter('contact_id');

    // just assign to smarty and compile HTML
    $smarty_vars = array();
    $smarty_vars['contribution_recur_id'] = $contribution_recur_id;
    $smarty_vars['contact_id'] = $contact_id;

    $smarty = CRM_Banking_Helpers_Smarty::singleton();
    $smarty->pushScope($smarty_vars);
    $html_snippet = $smarty->fetch('CRM/Banking/PluginImpl/Matcher/StopAvtale.execution.tpl');
    $smarty->popScope();
    return $html_snippet;
  }
}
